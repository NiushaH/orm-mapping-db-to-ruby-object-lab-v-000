class Student
  attr_accessor :name, :grade, :id

  def initialize(name, grade, id=nil)
    @id = id
    @name = name
    @grade = grade
  end 

  def self.create_table
    sql =  <<-SQL 
      CREATE TABLE students (
        id INTEGER PRIMARY KEY, 
        name TEXT, 
        grade INTEGER
        )
        SQL
    DB[:conn].execute(sql)
  end 
  
  def self.drop_table
    sql =  <<-SQL 
      DROP TABLE students
        SQL
    DB[:conn].execute(sql)
  end 
  
  def save
    sql = <<-SQL
      INSERT INTO students (name, grade) 
      VALUES (?, ?)
    SQL
 
    DB[:conn].execute(sql, self.name, self.grade)

    @id = DB[:conn].execute("SELECT last_insert_rowid() FROM students")[0][0]

  end 
  
  def self.create(name:, grade:)
    student = Student.new(name, grade)
    student.save
    student
  end

# new code here
  
  def self.new_from_db(row)
    student = self.new
    new_student.id = nil
    new_student.name =  row[1]
    new_student.grade = row[2]
    new_student
  end
  
  def self.find_by_name(student_name)
    self.all.select { |s| s.name.include?(student_name)}
  end
  
  def self.all
    sql = <<-SQL
      SELECT *
      FROM songs
    SQL
 
    DB[:conn].execute(sql).map do |row|
      self.new_from_db(row)
  end
  
  def self.all_tudents_in_grade_9
  
  end
  
  def self.students_below_12th_grade
  
  end
  
  def self.first_X_students_in_grade_10(total_gr10_students)
  
  end
  
  def self.first_student_in_grade_10
  
  end
  
  def self.all_students_in_grade_X(grade)
  
  end 
end